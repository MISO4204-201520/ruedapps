# Routes
# This file defines all application routes (Higher priority routes first)
#

# Home page
GET         /                                                 controllers.Application.index()

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                                     controllers.Assets.versioned(path="/public", file: Asset)

# Rutas perfil
GET         /login                                            controllers.perfil.PerfilKernelController.Login()
GET         /logout                                           controllers.perfil.PerfilKernelController.LogOut()
POST        /login                                            controllers.perfil.PerfilKernelController.LoginPost()
PUT         /usuario                                          controllers.perfil.PerfilKernelController.CrearUsuario()
PUT         /proveedor                                        controllers.perfil.PerfilKernelController.CrearProveedor()
POST        /usuario                                          controllers.perfil.PerfilKernelController.ActualizarUsuario()
GET         /usuario/:id                                      controllers.perfil.PerfilKernelController.ConsultarUsuarioPorId(id: Long)
GET         /ciclista/:email                                  controllers.perfil.PerfilKernelController.ConsultarUsuarioPorEmail(email: String)
GET         /ciclistas                                        controllers.perfil.PerfilKernelController.Ciclistas()
GET           /ciclista/:id/amigos                 controllers.perfil.PerfilKernelController.Amigos(id: Long)
PUT           /ciclista/:id/amigos/:idAmigo        controllers.perfil.PerfilKernelController.AgregarAmigo(id:Long, idAmigo:Long)
DELETE        /ciclista/:id/amigos/:idAmigo        controllers.perfil.PerfilKernelController.EliminarAmigo(id:Long, idAmigo:Long)
GET           /ciclista/:id/no-amigos              controllers.perfil.PerfilKernelController.NoAmigos(id: Long)

# Rutas recorridos
PUT         /ubicacion/:id                                    controllers.ruta.RutaController.SaveUbicacion(id: Long)
PUT         /ruta                                             controllers.ruta.RutaController.SaveRuta()
PUT         /recorrido                                        controllers.ruta.RutaController.SaveRutaRecorrido()
PUT         /historico                                        controllers.ruta.RutaController.SaveHistoricoRecorrido()
GET         /historico/:id                                    controllers.ruta.RutaController.ConsutaHistoricoPorId(id: Long)
GET         /historico/usuario/:id                            controllers.ruta.RutaController.ConsultarHistoricoPorUsusario(id: Long)
PUT         /recorrido/programacion                           controllers.ruta.RutaController.SaveProgramacionRuta()
PUT         /recorrido/programacion/ciclista/:id              controllers.ruta.RutaController.AddCiclistaProgramacionRuta(id: Long)
GET         /recorrido/programacion/:id                       controllers.ruta.RutaController.ConsultaProgramacionRuta(id: Long)
GET         /recorrido/programacion/organizador/:id           controllers.ruta.RutaController.ListaProgramacionRutaPorOrganizador(id: Long)
GET         /recorrido/programacion/participante/:id          controllers.ruta.RutaController.ListaProgramacionRutaPorParticipante(id: Long)

# Rutas directorio
GET         /categoria                                        controllers.directorio_servicios.DirectorioServiciosKernelController.retornarCategorias()
GET         /categoria/:id/servicio                           controllers.directorio_servicios.DirectorioServiciosKernelController.retornarServiciosPorCategoria(id: Long)
PUT         /categoria                                        controllers.directorio_servicios.DirectorioServiciosKernelController.registrarCategoria()
PUT         /categoria/:id/servicio                           controllers.directorio_servicios.DirectorioServiciosKernelController.registrarServicio(id: Long)
POST        /servicio/:id                                     controllers.directorio_servicios.DirectorioServiciosKernelController.editarServicio(id: Long)
DELETE      /servicio/:id                                     controllers.directorio_servicios.DirectorioServiciosKernelController.eliminarServicio(id: Long)

#Rutas Comunicacion
GET         /mensaje                                          controllers.comunicacion.MensajeController.Mensaje()
POST        /mensaje                                          controllers.comunicacion.MensajeController.MensajePost()
GET         /mensajeSocket                                    controllers.comunicacion.MensajeController.MensajeSocket()
